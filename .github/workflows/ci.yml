name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        package-manager: [npm, yarn, pnpm]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: ${{ matrix.package-manager }}

    - name: Setup pnpm
      if: matrix.package-manager == 'pnpm'
      uses: pnpm/action-setup@v2
      with:
        version: 8

    - name: Install dependencies
      if: matrix.package-manager == 'npm'
      run: npm ci

    - name: Install dependencies
      if: matrix.package-manager == 'yarn'
      run: yarn install --frozen-lockfile

    - name: Install dependencies
      if: matrix.package-manager == 'pnpm'
      run: pnpm install --frozen-lockfile

    - name: Run type check
      if: matrix.package-manager == 'npm'
      run: npm run type-check

    - name: Run type check
      if: matrix.package-manager == 'yarn'
      run: yarn type-check

    - name: Run type check
      if: matrix.package-manager == 'pnpm'
      run: pnpm type-check

    - name: Run lint
      if: matrix.package-manager == 'npm'
      run: npm run lint

    - name: Run lint
      if: matrix.package-manager == 'yarn'
      run: yarn lint

    - name: Run lint
      if: matrix.package-manager == 'pnpm'
      run: pnpm lint

    - name: Build
      if: matrix.package-manager == 'npm'
      run: npm run build

    - name: Build
      if: matrix.package-manager == 'yarn'
      run: yarn build

    - name: Build
      if: matrix.package-manager == 'pnpm'
      run: pnpm build
